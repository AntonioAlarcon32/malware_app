#include "../../libs/libcurl/headers/curl.h"
#include <string>
#include <chrono>
#include <thread>
#include <iostream>

using namespace std;

size_t write_callback(void* ptr, size_t size, size_t nmemb, std::string* data) {
    data->append((char*)ptr, size * nmemb);
    return size * nmemb;
}


void requestEndpoint(const char* url, int sleepTime) {
    CURL* curl;
    CURLcode res;
    std::string readBuffer;

    while (true) {
        curl = curl_easy_init();
        if (curl) {
            curl_easy_setopt(curl, CURLOPT_URL, url);
            curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);
            curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);

            res = curl_easy_perform(curl);
            if (res != CURLE_OK) {
                std::cerr << "curl_easy_perform() failed: " << curl_easy_strerror(res) << std::endl;
            }
            else {
                std::cout << "Response from " << url << ": " << readBuffer << std::endl;
            }

            curl_easy_cleanup(curl);
            readBuffer.clear();
        }

        std::this_thread::sleep_for(std::chrono::seconds(sleepTime));
    }
}